/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.synclab.avro.data;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Application extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2196712547972466603L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Application\",\"namespace\":\"org.synclab.avro.data\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"rating\",\"type\":[\"float\",\"null\"]},{\"name\":\"reviews\",\"type\":\"int\"},{\"name\":\"size_in_kilobytes\",\"type\":[\"int\",\"string\"]},{\"name\":\"installs_approx\",\"type\":\"long\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"ApplicationType\",\"symbols\":[\"UNKNOWN\",\"FREE\",\"PAID\"],\"default\":\"FREE\"}},{\"name\":\"price\",\"type\":\"float\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Application> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Application> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Application> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Application> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Application> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Application to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Application from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Application instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Application fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence name;
  private java.lang.CharSequence category;
  private java.lang.Float rating;
  private int reviews;
  private java.lang.Object size_in_kilobytes;
  private long installs_approx;
  private org.synclab.avro.data.ApplicationType type;
  private float price;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Application() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param category The new value for category
   * @param rating The new value for rating
   * @param reviews The new value for reviews
   * @param size_in_kilobytes The new value for size_in_kilobytes
   * @param installs_approx The new value for installs_approx
   * @param type The new value for type
   * @param price The new value for price
   */
  public Application(java.lang.CharSequence name, java.lang.CharSequence category, java.lang.Float rating, java.lang.Integer reviews, java.lang.Object size_in_kilobytes, java.lang.Long installs_approx, org.synclab.avro.data.ApplicationType type, java.lang.Float price) {
    this.name = name;
    this.category = category;
    this.rating = rating;
    this.reviews = reviews;
    this.size_in_kilobytes = size_in_kilobytes;
    this.installs_approx = installs_approx;
    this.type = type;
    this.price = price;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return category;
    case 2: return rating;
    case 3: return reviews;
    case 4: return size_in_kilobytes;
    case 5: return installs_approx;
    case 6: return type;
    case 7: return price;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: category = (java.lang.CharSequence)value$; break;
    case 2: rating = (java.lang.Float)value$; break;
    case 3: reviews = (java.lang.Integer)value$; break;
    case 4: size_in_kilobytes = value$; break;
    case 5: installs_approx = (java.lang.Long)value$; break;
    case 6: type = (org.synclab.avro.data.ApplicationType)value$; break;
    case 7: price = (java.lang.Float)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.CharSequence getCategory() {
    return category;
  }


  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'rating' field.
   * @return The value of the 'rating' field.
   */
  public java.lang.Float getRating() {
    return rating;
  }


  /**
   * Sets the value of the 'rating' field.
   * @param value the value to set.
   */
  public void setRating(java.lang.Float value) {
    this.rating = value;
  }

  /**
   * Gets the value of the 'reviews' field.
   * @return The value of the 'reviews' field.
   */
  public int getReviews() {
    return reviews;
  }


  /**
   * Sets the value of the 'reviews' field.
   * @param value the value to set.
   */
  public void setReviews(int value) {
    this.reviews = value;
  }

  /**
   * Gets the value of the 'size_in_kilobytes' field.
   * @return The value of the 'size_in_kilobytes' field.
   */
  public java.lang.Object getSizeInKilobytes() {
    return size_in_kilobytes;
  }


  /**
   * Sets the value of the 'size_in_kilobytes' field.
   * @param value the value to set.
   */
  public void setSizeInKilobytes(java.lang.Object value) {
    this.size_in_kilobytes = value;
  }

  /**
   * Gets the value of the 'installs_approx' field.
   * @return The value of the 'installs_approx' field.
   */
  public long getInstallsApprox() {
    return installs_approx;
  }


  /**
   * Sets the value of the 'installs_approx' field.
   * @param value the value to set.
   */
  public void setInstallsApprox(long value) {
    this.installs_approx = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public org.synclab.avro.data.ApplicationType getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(org.synclab.avro.data.ApplicationType value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public float getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(float value) {
    this.price = value;
  }

  /**
   * Creates a new Application RecordBuilder.
   * @return A new Application RecordBuilder
   */
  public static org.synclab.avro.data.Application.Builder newBuilder() {
    return new org.synclab.avro.data.Application.Builder();
  }

  /**
   * Creates a new Application RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Application RecordBuilder
   */
  public static org.synclab.avro.data.Application.Builder newBuilder(org.synclab.avro.data.Application.Builder other) {
    if (other == null) {
      return new org.synclab.avro.data.Application.Builder();
    } else {
      return new org.synclab.avro.data.Application.Builder(other);
    }
  }

  /**
   * Creates a new Application RecordBuilder by copying an existing Application instance.
   * @param other The existing instance to copy.
   * @return A new Application RecordBuilder
   */
  public static org.synclab.avro.data.Application.Builder newBuilder(org.synclab.avro.data.Application other) {
    if (other == null) {
      return new org.synclab.avro.data.Application.Builder();
    } else {
      return new org.synclab.avro.data.Application.Builder(other);
    }
  }

  /**
   * RecordBuilder for Application instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Application>
    implements org.apache.avro.data.RecordBuilder<Application> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence category;
    private java.lang.Float rating;
    private int reviews;
    private java.lang.Object size_in_kilobytes;
    private long installs_approx;
    private org.synclab.avro.data.ApplicationType type;
    private float price;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.synclab.avro.data.Application.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.rating)) {
        this.rating = data().deepCopy(fields()[2].schema(), other.rating);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.reviews)) {
        this.reviews = data().deepCopy(fields()[3].schema(), other.reviews);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.size_in_kilobytes)) {
        this.size_in_kilobytes = data().deepCopy(fields()[4].schema(), other.size_in_kilobytes);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.installs_approx)) {
        this.installs_approx = data().deepCopy(fields()[5].schema(), other.installs_approx);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.type)) {
        this.type = data().deepCopy(fields()[6].schema(), other.type);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.price)) {
        this.price = data().deepCopy(fields()[7].schema(), other.price);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing Application instance
     * @param other The existing instance to copy.
     */
    private Builder(org.synclab.avro.data.Application other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.rating)) {
        this.rating = data().deepCopy(fields()[2].schema(), other.rating);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reviews)) {
        this.reviews = data().deepCopy(fields()[3].schema(), other.reviews);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.size_in_kilobytes)) {
        this.size_in_kilobytes = data().deepCopy(fields()[4].schema(), other.size_in_kilobytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.installs_approx)) {
        this.installs_approx = data().deepCopy(fields()[5].schema(), other.installs_approx);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.type)) {
        this.type = data().deepCopy(fields()[6].schema(), other.type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.price)) {
        this.price = data().deepCopy(fields()[7].schema(), other.price);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.CharSequence getCategory() {
      return category;
    }


    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setCategory(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.category = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearCategory() {
      category = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'rating' field.
      * @return The value.
      */
    public java.lang.Float getRating() {
      return rating;
    }


    /**
      * Sets the value of the 'rating' field.
      * @param value The value of 'rating'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setRating(java.lang.Float value) {
      validate(fields()[2], value);
      this.rating = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'rating' field has been set.
      * @return True if the 'rating' field has been set, false otherwise.
      */
    public boolean hasRating() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'rating' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearRating() {
      rating = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'reviews' field.
      * @return The value.
      */
    public int getReviews() {
      return reviews;
    }


    /**
      * Sets the value of the 'reviews' field.
      * @param value The value of 'reviews'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setReviews(int value) {
      validate(fields()[3], value);
      this.reviews = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'reviews' field has been set.
      * @return True if the 'reviews' field has been set, false otherwise.
      */
    public boolean hasReviews() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'reviews' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearReviews() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'size_in_kilobytes' field.
      * @return The value.
      */
    public java.lang.Object getSizeInKilobytes() {
      return size_in_kilobytes;
    }


    /**
      * Sets the value of the 'size_in_kilobytes' field.
      * @param value The value of 'size_in_kilobytes'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setSizeInKilobytes(java.lang.Object value) {
      validate(fields()[4], value);
      this.size_in_kilobytes = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'size_in_kilobytes' field has been set.
      * @return True if the 'size_in_kilobytes' field has been set, false otherwise.
      */
    public boolean hasSizeInKilobytes() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'size_in_kilobytes' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearSizeInKilobytes() {
      size_in_kilobytes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'installs_approx' field.
      * @return The value.
      */
    public long getInstallsApprox() {
      return installs_approx;
    }


    /**
      * Sets the value of the 'installs_approx' field.
      * @param value The value of 'installs_approx'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setInstallsApprox(long value) {
      validate(fields()[5], value);
      this.installs_approx = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'installs_approx' field has been set.
      * @return True if the 'installs_approx' field has been set, false otherwise.
      */
    public boolean hasInstallsApprox() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'installs_approx' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearInstallsApprox() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public org.synclab.avro.data.ApplicationType getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setType(org.synclab.avro.data.ApplicationType value) {
      validate(fields()[6], value);
      this.type = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearType() {
      type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public float getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder setPrice(float value) {
      validate(fields()[7], value);
      this.price = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public org.synclab.avro.data.Application.Builder clearPrice() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Application build() {
      try {
        Application record = new Application();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.category = fieldSetFlags()[1] ? this.category : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.rating = fieldSetFlags()[2] ? this.rating : (java.lang.Float) defaultValue(fields()[2]);
        record.reviews = fieldSetFlags()[3] ? this.reviews : (java.lang.Integer) defaultValue(fields()[3]);
        record.size_in_kilobytes = fieldSetFlags()[4] ? this.size_in_kilobytes :  defaultValue(fields()[4]);
        record.installs_approx = fieldSetFlags()[5] ? this.installs_approx : (java.lang.Long) defaultValue(fields()[5]);
        record.type = fieldSetFlags()[6] ? this.type : (org.synclab.avro.data.ApplicationType) defaultValue(fields()[6]);
        record.price = fieldSetFlags()[7] ? this.price : (java.lang.Float) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Application>
    WRITER$ = (org.apache.avro.io.DatumWriter<Application>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Application>
    READER$ = (org.apache.avro.io.DatumReader<Application>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










